{"version":3,"sources":["components/WarriorCard/WarriorCard.js","components/Wrapper/Wrapper.js","components/Title/Title.js","App.js","index.js"],"names":["WarriorCard","props","react_default","a","createElement","className","onClick","wasClicked","warrior","id","src","image","alt","name","Wrapper","children","Title","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","warriors","score","topScore","clicked","message","addPoint","bind","assertThisInitialized","newArr","sort","b","Math","random","setState","prevPoint","scramble","includes","resetGame","push","topScoring","length","_this2","components_Wrapper_Wrapper","components_Title_Title","map","components_WarriorCard_WarriorCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"irDAaeA,SAVK,SAAAC,GAAK,OACrBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBC,QAAS,WAAOL,EAAMM,WAAWN,EAAMO,QAAQC,MAC1EP,EAAAC,EAAAC,cAAA,OAAKM,IAAKT,EAAMO,QAAQG,MAAOC,IAAKX,EAAMO,QAAQK,WCF/CC,SAFC,SAAAb,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMc,YCE1CC,SAFD,SAAAf,GAAK,OAAIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMc,mBC6GrCE,qBAvGb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACXC,WACAC,MAAO,EACPC,SAAU,EACVC,QAAS,GACTC,QAAS,4EAGXZ,EAAKa,SAAWb,EAAKa,SAASC,KAAdb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAChBA,EAAKX,WAAaW,EAAKX,WAAWyB,KAAhBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAXNA,0EAgBZ,IAAIgB,EAASR,EAASS,KAAK,SAAChC,EAAGiC,GAAQ,MAAO,GAAKC,KAAKC,WACxDjB,KAAKkB,SAAS,WACZ,MAAO,CACLb,SAAUQ,wCAMdb,KAAKkB,SAAS,SAAAC,GACZ,MAAO,CACLb,MAAOa,EAAUb,MAAQ,0CAM7BN,KAAKkB,SAAS,SAAAC,GACZ,MAAO,CACLZ,SAAUY,EAAUZ,SAAW,yCAMnCP,KAAKkB,SAAS,WACZ,MAAO,CACLZ,MAAO,KAGXN,KAAKkB,SAAS,WACZ,MAAO,CACLV,QAAS,MAGbR,KAAKkB,SAAS,WACZ,MAAM,CACJT,QAAS,iHAKJrB,GACTY,KAAKoB,WACDpB,KAAKI,MAAMI,QAAQa,SAASjC,IAC9BY,KAAKsB,YACLtB,KAAKoB,aAELpB,KAAKI,MAAMI,QAAQe,KAAKnC,GACxBY,KAAKU,WACDV,KAAKI,MAAME,OAASN,KAAKI,MAAMG,UACjCP,KAAKwB,aAE2B,KAA9BxB,KAAKI,MAAMI,QAAQiB,OACrBzB,KAAKoB,WAELpB,KAAKkB,SAAS,WACZ,MAAM,CACJT,QAAS,mDAQV,IAAAiB,EAAA1B,KACP,OACEnB,EAAAC,EAAAC,cAAC4C,EAAD,KACE9C,EAAAC,EAAAC,cAAC6C,EAAD,wBAAuB/C,EAAAC,EAAAC,cAAA,WACvBF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQgB,KAAKI,MAAMK,SAAe5B,EAAAC,EAAAC,cAAA,WAClDF,EAAAC,EAAAC,cAAA,WAFA,IAEOF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,UAAqCgB,KAAKI,MAAME,MAAhD,iBAAqEN,KAAKI,MAAMG,WAGtFP,KAAKI,MAAMC,SAASwB,IAAI,SAAA1C,GAAO,OAC9BN,EAAAC,EAAAC,cAAC+C,EAAD,CACEC,IAAK5C,EAAQC,GACbD,QAASA,EACTD,WAAYwC,EAAKxC,uBAhGX8C,cCFlBC,IAASC,OAAOrD,EAAAC,EAAAC,cAACoD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a2a767ac.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./WarriorCard.css\"\n\nconst WarriorCard = props => (\n    <div className=\"card\">\n\n        <div className=\"img-container\" onClick={() => {props.wasClicked(props.warrior.id)}}>\n            <img src={props.warrior.image} alt={props.warrior.name}/>\n        </div>\n\n    </div>\n)\n\nexport default WarriorCard;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>\n\nexport default Wrapper;","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\n\nexport default Title;","import React, { Component } from 'react';\nimport WarriorCard from \"./components/WarriorCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport warriors from \"./warriors.json\";\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      warriors,\n      score: 0,\n      topScore: 0,\n      clicked: [],\n      message: \"Click on an image to earn points, but don't click on any more than once!\"\n    };\n    //Still have to bind this when creating my own methods for some reason\n    this.addPoint = this.addPoint.bind(this);\n    this.wasClicked = this.wasClicked.bind(this)\n  };\n\n  // Working on randomizing\n  scramble() {\n    let newArr = warriors.sort((a, b) => { return .5 - Math.random() })\n    this.setState(() => {\n      return {\n        warriors: newArr\n      }\n    })\n  }\n\n  addPoint() {\n    this.setState(prevPoint => {\n      return {\n        score: prevPoint.score + 1\n      }\n    })\n  }\n\n  topScoring() {\n    this.setState(prevPoint => {\n      return {\n        topScore: prevPoint.topScore + 1\n      }\n    })\n  }\n\n  resetGame() {\n    this.setState(() => {\n      return {\n        score: 0\n      }\n    })\n    this.setState(() => {\n      return {\n        clicked: []\n      }\n    })\n    this.setState(() => {\n      return{\n        message: \"Click on an image to earn points, but don't click on any more than once!\"\n      }\n    })\n  }\n\n  wasClicked(id) {\n    this.scramble();\n    if (this.state.clicked.includes(id)) {\n      this.resetGame()\n      this.scramble();\n    } else {\n      this.state.clicked.push(id);\n      this.addPoint();\n      if (this.state.score >= this.state.topScore) {\n        this.topScoring()\n      };\n      if (this.state.clicked.length === 12) {\n        this.scramble();\n      } else {\n        this.setState(() => {\n          return{\n            message: \"Keep going!\"\n          }\n        })\n      }\n      // console.log(this.state.clicked)\n    }\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Title>Dragon Dropper! <br />\n        <span className=\"inst\">{this.state.message}</span><br />\n        <hr /> <span className=\"scoreStyle\">Score: {this.state.score} | Top Score: {this.state.topScore}</span>\n        \n        </Title>\n        {this.state.warriors.map(warrior => (\n          <WarriorCard\n            key={warrior.id}\n            warrior={warrior}\n            wasClicked={this.wasClicked}\n          />\n        ))}\n      </Wrapper>\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}